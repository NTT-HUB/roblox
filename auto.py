from chat_downloader import ChatDownloader
import pyautogui
import threading
import time

# üéØ NH·∫¨P LINK LIVESTREAM YOUTUBE C·ª¶A B·∫†N T·∫†I ƒê√ÇY:
YOUTUBE_URL = 'https://www.youtube.com/watch?v=YOUR_LIVE_ID'

# üîÅ H√†m gi·ªØ ph√≠m trong v√†i gi√¢y r·ªìi t·ª± th·∫£
def hold_key_for_seconds(key, seconds):
    def do_hold():
        pyautogui.keyDown(key)
        print(f"[HOLD] Gi·ªØ ph√≠m '{key}' trong {seconds}s")
        time.sleep(seconds)
        pyautogui.keyUp(key)
        print(f"[HOLD] Th·∫£ ph√≠m '{key}' sau {seconds}s")
    threading.Thread(target=do_hold).start()

# üß† X·ª≠ l√Ω l·ªánh t·ª´ b√¨nh lu·∫≠n
def handle_command(text):
    text = text.strip().lower()

    if text.startswith("/mx "):
        try:
            dx = int(text.split("/mx ")[1])
            pyautogui.moveRel(dx, 0, duration=0.1)
            print(f"[MX] Di chuy·ªÉn X: {dx}px")
        except:
            print("[L·ªñI] /mx kh√¥ng h·ª£p l·ªá")

    elif text.startswith("/my "):
        try:
            dy = int(text.split("/my ")[1])
            pyautogui.moveRel(0, dy, duration=0.1)
            print(f"[MY] Di chuy·ªÉn Y: {dy}px")
        except:
            print("[L·ªñI] /my kh√¥ng h·ª£p l·ªá")

    elif text.startswith("/ml "):
        value = text.split("/ml ")[1].strip()
        if value == "true":
            pyautogui.mouseDown(button='left')
            print("[ML] Gi·ªØ chu·ªôt tr√°i")
        elif value == "false":
            pyautogui.mouseUp(button='left')
            print("[ML] Th·∫£ chu·ªôt tr√°i")
        else:
            print("[L·ªñI] /ml ch·ªâ nh·∫≠n true/false")

    elif text.startswith("/mr "):
        value = text.split("/mr ")[1].strip()
        if value == "true":
            pyautogui.mouseDown(button='right')
            print("[MR] Gi·ªØ chu·ªôt ph·∫£i")
        elif value == "false":
            pyautogui.mouseUp(button='right')
            print("[MR] Th·∫£ chu·ªôt ph·∫£i")
        else:
            print("[L·ªñI] /mr ch·ªâ nh·∫≠n true/false")

    elif text.startswith("/k "):
        key = text[3:].strip()
        if key in pyautogui.KEYBOARD_KEYS:
            pyautogui.press(key)
            print(f"[K] B·∫•m ph√≠m: {key}")
        else:
            print(f"[L·ªñI] Ph√≠m kh√¥ng h·ª£p l·ªá: {key}")

    elif text.startswith("/kd "):
        key = text[4:].strip()
        if key in pyautogui.KEYBOARD_KEYS:
            pyautogui.keyDown(key)
            print(f"[KD] Gi·ªØ ph√≠m: {key}")
        else:
            print(f"[L·ªñI] Ph√≠m kh√¥ng h·ª£p l·ªá: {key}")

    elif text.startswith("/ku "):
        key = text[4:].strip()
        if key in pyautogui.KEYBOARD_KEYS:
            pyautogui.keyUp(key)
            print(f"[KU] Th·∫£ ph√≠m: {key}")
        else:
            print(f"[L·ªñI] Ph√≠m kh√¥ng h·ª£p l·ªá: {key}")

    elif text.startswith("/mw "):
        try:
            seconds = float(text.split("/mw ")[1])
            hold_key_for_seconds("w", seconds)
        except:
            print("[L·ªñI] /mw sai c√∫ ph√°p")

    elif text.startswith("/ma "):
        try:
            seconds = float(text.split("/ma ")[1])
            hold_key_for_seconds("a", seconds)
        except:
            print("[L·ªñI] /ma sai c√∫ ph√°p")

    elif text.startswith("/ms "):
        try:
            seconds = float(text.split("/ms ")[1])
            hold_key_for_seconds("s", seconds)
        except:
            print("[L·ªñI] /ms sai c√∫ ph√°p")

    elif text.startswith("/md "):
        try:
            seconds = float(text.split("/md ")[1])
            hold_key_for_seconds("d", seconds)
        except:
            print("[L·ªñI] /md sai c√∫ ph√°p")

    elif text == "/e":
        hold_key_for_seconds("e", 4)

# ‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu theo d√µi chat YouTube
def start_listening():
    print("=== K·∫æT N·ªêI CHAT YOUTUBE ===")
    try:
        chat = ChatDownloader().get_chat(YOUTUBE_URL)
        for message in chat:
            user = message.get("author", "Unknown")
            content = message.get("message", "")
            print(f"{user}: {content}")
            handle_command(content)
    except Exception as e:
        print(f"[L·ªñI] Kh√¥ng th·ªÉ ƒë·ªçc chat: {e}")

# üî∞ Ch·∫°y ch√≠nh
if __name__ == "__main__":
    start_listening()
